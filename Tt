Excellent 👌 — c’est exactement le bon point à clarifier.

➡️ Donc dans ton cas, le champ data.message contient un texte brut du style :

PMs lues : 144678 | PMs non concernées : 144574 | PMs concernées : 304 | PMs en anomalies : 0

et tu veux extraire la valeur numérique “144678” (ou d’autres nombres selon la métrique) pour l’afficher automatiquement dans ton dashboard Kibana.

Parfaitement faisable 💪
Voici comment procéder pas à pas ⬇️


---

🧠 Objectif

Créer des champs calculés (Runtime fields) dans Kibana pour isoler ces valeurs :

PMs_lues

PMs_concernees

PMs_non_concernees

PMs_anomalies


Tu pourras ensuite les utiliser comme de vrais champs numériques dans les visualisations (métriques, courbes, etc.).


---

⚙️ Étape 1 — Ouvrir la gestion du schéma

1. Va dans Stack Management → Data Views (ou Index Patterns)


2. Sélectionne ton data view (ex. AP11382 ou celui que tu utilises dans Discover)


3. Clique sur Add field




---

🧩 Étape 2 — Créer le champ “PMs lues”

1. Nom : pms_lues


2. Type : Number


3. Script (langage Painless) :

if (doc['data.message.keyword'].size() > 0) {
  def msg = doc['data.message.keyword'].value;
  def m = /PMs lues\s*:\s*(\d+)/.matcher(msg);
  if (m.find()) return Integer.parseInt(m.group(1));
}
return null;


4. Clique sur Save field




---

🧩 Étape 3 — Répéter pour les autres valeurs

▶️ PMs concernées :

if (doc['data.message.keyword'].size() > 0) {
  def msg = doc['data.message.keyword'].value;
  def m = /PMs concernées\s*:\s*(\d+)/.matcher(msg);
  if (m.find()) return Integer.parseInt(m.group(1));
}
return null;

▶️ PMs non concernées :

if (doc['data.message.keyword'].size() > 0) {
  def msg = doc['data.message.keyword'].value;
  def m = /PMs non concernées\s*:\s*(\d+)/.matcher(msg);
  if (m.find()) return Integer.parseInt(m.group(1));
}
return null;

▶️ PMs en anomalies :

if (doc['data.message.keyword'].size() > 0) {
  def msg = doc['data.message.keyword'].value;
  def m = /PMs en anomalies\s*:\s*(\d+)/.matcher(msg);
  if (m.find()) return Integer.parseInt(m.group(1));
}
return null;


---

🧮 Étape 4 — Vérification dans Discover

1. Retourne dans Discover


2. Rafraîchis ton data view (en haut à droite → “Refresh fields”)


3. Ajoute les nouvelles colonnes :
pms_lues, pms_concernees, etc.


4. Tu devrais maintenant voir les valeurs numériques extraites à partir du texte.




---

📊 Étape 5 — Créer une visualisation simple

1. Va dans Visualize → Create visualization → Metric


2. Metric → Aggregation = Max(pms_lues) ou Last value(pms_lues)
(selon la version de Kibana)


3. Filtre optionnel :

data.message:"PMs lues"


4. Sauvegarde et ajoute au Dashboard.




---

🎯 Résultat

Tu obtiens automatiquement :

“PMs lues : 144 678”

“PMs concernées : 304”

“PMs anomalies : 0”


et ça se mettra à jour à chaque exécution du job ou à chaque log reçu.


---

Souhaites-tu que je te crée le script complet avec les 4 champs prêts à copier-coller (au format JSON Kibana pour ajout direct dans l’Index Pattern) ?
👉 Comme ça tu pourras tout importer d’un coup sans le faire à la main.

