Tu as cette erreur parce que data.message.keyword n’existe pas dans ton mapping (pas de sous-champ keyword). Du coup doc['data.message.keyword'] est introuvable.
La solution est de lire le texte depuis _source puis d’émettre la valeur avec emit().

✅ Script runtime qui marche sans .keyword

Type du runtime field : Long (ou Number)

Set value : ON

Script :


// Lire le message depuis _source (plusieurs structures possibles)
String msg = null;

if (params._source != null) {
  def src = params._source;

  // Cas 1: objet imbriqué { "data": { "message": "..." } }
  if (src.containsKey('data') && src.data != null && src.data instanceof Map && src.data.containsKey('message')) {
    msg = src.data.message;
  }

  // Cas 2: champ aplati "data.message" (flattened)
  if (msg == null && src.containsKey('data.message')) {
    msg = src['data.message'];
  }

  // Cas 3: message au premier niveau (au cas où)
  if (msg == null && src.containsKey('message')) {
    msg = src.message;
  }
}

// Extraire "PMs lues : <nombre>" et l'émettre
if (msg != null) {
  def m = /PMs lues\s*:\s*([0-9]+)/.matcher(msg);
  if (m.find()) {
    emit(Long.parseLong(m.group(1)));
  }
}

> Pour les autres métriques, ne change que la regex :

PMs concernées\s*:\s*([0-9]+)

PMs non concernées\s*:\s*([0-9]+)

PMs en anomalies\s*:\s*([0-9]+)




🧪 Astuce debug (si ça échoue encore)

1. Crée temporairement un runtime field Type = keyword nommé debug_msg avec :



String msg = null;
if (params._source != null) {
  def src = params._source;
  if (src.containsKey('data') && src.data instanceof Map && src.data.containsKey('message')) msg = src.data.message;
  else if (src.containsKey('data.message')) msg = src['data.message'];
  else if (src.containsKey('message')) msg = src.message;
}
if (msg != null) emit(msg);

2. Va dans Discover et ajoute debug_msg pour voir exactement le contenu réel.


3. Ajuste ensuite la regex si nécessaire.



⚠️ À éviter

doc['data.message'] sur un champ text → fielddata disabled.

doc['data.message.keyword'] si le sous-champ n’existe pas → No field found.

return au lieu de emit() → cast [int] to [void].


Une fois pms_lues OK, crée pms_concernees, pms_non_concernees, pms_anomalies, puis fais une viz Metric avec Max() (ou “Last value”) pour chaque tuile du dashboard.

